name: Release new version on TAG push

on:
  push:
    tags:
      - '1.*.*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}

      - name: Publish to GitHub Packages
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: publishAllPublicationsToGitHubPackagesRepository
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}

  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve all commit messages between the latest two tags
        id: get_commits
        run: |
          export commitsText=$(./prepare-commits-texts.sh)
          echo "$commitsText"
          echo "commitsTexts=$commitsText" >> $GITHUB_OUTPUT
          
      - name: OpenAI CreateCompletion
        id: openai
        run: |
          export response=$(./create-release-text.sh ${{secrets.OPENAI_API_KEY}} "${{ steps.get_commits.outputs.commitsTexts }}" ${{ vars.OPEN_AI_MODEL_NAME }})
          echo "$response"

      - name: Create Release on GitHub
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.ref_name }}
          name: MineFortress ${{ github.ref_name }}
          body: ${{ fromJson(steps.openai.outputs.response).choices[0].text }}
          prerelease: false
          allowUpdates: true