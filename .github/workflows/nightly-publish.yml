name: Nightly Build and Publish

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Retrieve all commit messages pushed and put in the environment variable GITHUB_COMMITS_TEXT
      id: commits
      run: |
        export commitsText=$(git log --format=%s ${{ github.event.before }}..${{ github.sha }} | tr '\n' ':newline:')
        echo "Commits texts: $commitsText"
        echo "GITHUB_COMMITS_TEXT=$commitsText" >> $GITHUB_ENV

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build
      env:
        GITHUB_USERNAME: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BUILD_NUMBER: ${{ github.run_number }}

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    - name: Publish to GitHub Packages
      uses: gradle/gradle-build-action@v2
      with:
        arguments: publishAllPublicationsToGitHubPackagesRepository
      env:
        GITHUB_USERNAME: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BUILD_NUMBER: ${{ github.run_number }}
        GITHUB_COMMITS_TEXT: ${{ env.GITHUB_COMMITS_TEXT }}

    - name: Delete packages, keep most recent
      uses: actions/delete-package-versions@v4
      with:
        package-name: 'org.minefortress.minefortress-nightly'
        package-type: 'maven'
        min-versions-to-keep: 10

    - name: prepare the commit messages
      run: |
        export notificationMessages=$(git log --reverse --format=%s ${{ github.event.before }}..${{ github.sha }} | tr '\n' '\n- ')
        echo "Notification messages: - $notificationMessages"
        echo "notificationMessages=$notificationMessages" >> $GITHUB_OUTPUT


#    - name: Send Discord Notification
#      uses: sebastianpopp/discord-action@releases/v2
#      with:
#        webhook: ${{ secrets.DISCORD_WEBHOOK }}
#        message: |
#          New dev build available!
#          Build number: ${{ github.run_number }}
#
#          What's new:
#            ${{ env.GITHUB_COMMITS_TEXT }}
#
#          https://builds.minefortress.org
#          @remmintan
          
